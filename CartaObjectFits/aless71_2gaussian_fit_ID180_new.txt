# image: aless71_dirtycube_allspw_nopbcorr.fits
# statistic: 3
# ellipse[[193.380746pix, 168.136599pix], [3.847471pix, 6.215145pix], 302.978060deg]
# ellipse(wcs:ICRS)[[3:33:05.6434472252, -27:33:28.6158362802], [0.9618677500", 1.5537862500"], 302.978060deg]

 Gaussian function fitting with 2 component(s)
 summary from method 'trust-region/levenberg-marquardt'
 number of iterations = 31
 function evaluations = 224
 Jacobian evaluations = 0
 reason for stopping  = small gradient
 initial |f(x)|       = 0.004226
 final |f(x)|         = 0.001706
 initial cost         = 1.786308270228e-05
 final cost           = 2.911045482738e-06
 final cond(J)        = 5.084773892087e+04

 baseline
 y intercept  (fixed) = 0.000000000000e+00 (Jy)
 slope        (fixed) = 0.000000000000e+00 (Jy / km/s)
 component #1
 amp1                 = 2.111334837992e-03 (Jy) ± 1.746403524618e-04 (8.27%)
 center1              = 2.361666616789e+05 (km/s) ± 2.965603710762e+00 (0.00126%)
 fwhm1                = 5.966320362206e+01 (Jy) ± 7.272129130138e+00 (12.2%)
 integral of function ~= 1.340898463470e-01 (Jy * km/s) ± 1.429856429737e-02 (10.7%)
 component #2
 amp2                 = 2.689535222228e-03 (Jy) ± 1.669925977905e-04 (6.21%)
 center2              = 2.360758312886e+05 (km/s) ± 2.443518650752e+00 (0.00104%)
 fwhm2                = 6.670913550740e+01 (Jy) ± 6.178539733459e+00 (9.26%)
 integral of function ~= 1.909830210697e-01 (Jy * km/s) ± 1.491761022252e-02 (7.81%)